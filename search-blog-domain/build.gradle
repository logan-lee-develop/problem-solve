plugins {
    id "io.franzbecker.gradle-lombok" version "4.0.0"
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

bootJar { enabled = false }
jar { enabled = true }

repositories {
    mavenCentral()
}

dependencies {
    compileOnly "org.projectlombok:lombok:${projectlombok}"
    annotationProcessor "org.projectlombok:lombok:${projectlombok}"
    testCompileOnly "org.projectlombok:lombok:${projectlombok}"
    testAnnotationProcessor "org.projectlombok:lombok:${projectlombok}"
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.9.2") {
        exclude module:'junit-platform-commons'
    }
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.9.2")
    testRuntimeOnly("org.junit.platform:junit-platform-engine:1.9.2")
    testRuntimeOnly("org.junit.platform:junit-platform-commons:1.9.2")
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation('org.apache.commons:commons-lang3:3.12.0')
    implementation('org.springframework.boot:spring-boot-starter-webflux')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-validation')
    implementation('org.springframework.boot:spring-boot-starter-aop')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.7")
    implementation("io.github.resilience4j:resilience4j-all:${resilience4jVersion}")
    implementation("io.github.resilience4j:resilience4j-spring-boot2:${resilience4jVersion}")
    implementation("io.github.resilience4j:resilience4j-micrometer:${resilience4jVersion}")
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    compile "com.google.guava:guava:30.1.1-jre"
    implementation group: 'org.json', name: 'json', version: '20210307'
    testImplementation ('org.springframework.boot:spring-boot-starter-test') {
        exclude module:'junit-platform-commons'
    }
}

test {
    useJUnitPlatform()
}